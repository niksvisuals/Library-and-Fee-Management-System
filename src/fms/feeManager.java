/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fms;

import java.awt.CardLayout;
import java.math.BigInteger;
import java.sql.Connection;
import java.util.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author shren
 */
public class feeManager extends javax.swing.JFrame {

    /**
     * Creates new form feeManager
     */
    public feeManager() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainPanel = new javax.swing.JPanel();
        feesHome = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        javax.swing.JPanel addNewStudent = new javax.swing.JPanel();
        javax.swing.JPanel studDetails = new javax.swing.JPanel();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        studIdInp = new javax.swing.JTextField();
        fnameInp = new javax.swing.JTextField();
        lnameInp = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressInp = new javax.swing.JTextArea();
        mobileInp = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        studFeeDetails = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dateInp = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        dsCB = new javax.swing.JCheckBox();
        aaCB = new javax.swing.JCheckBox();
        javaCB = new javax.swing.JCheckBox();
        dmsCB = new javax.swing.JCheckBox();
        itcCB = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        calculatedFees = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        currFesInp = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        paymentMethod = new javax.swing.JComboBox<>();
        addNewStudBtn = new javax.swing.JButton();
        referLabel = new javax.swing.JLabel();
        referanceIdInp = new javax.swing.JTextField();
        searchStudent = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        payFeesPanel = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        studentIDInp = new javax.swing.JTextField();
        studContactInp = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        currentDbBal = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        currPaymentInp = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        updatedDbBal = new javax.swing.JTextField();
        checkStudDuesPanel = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        backBtn = new javax.swing.JMenu();
        studInfo = new javax.swing.JMenu();
        addStud = new javax.swing.JMenuItem();
        searchStud = new javax.swing.JMenuItem();
        payFees = new javax.swing.JMenu();
        payStudFees = new javax.swing.JMenuItem();
        checkStudDues = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setLayout(new java.awt.CardLayout());

        feesHome.setLayout(new java.awt.GridLayout(1, 1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Fee Management System");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        feesHome.add(jLabel1);

        mainPanel.add(feesHome, "feesHome");

        addNewStudent.setPreferredSize(new java.awt.Dimension(900, 500));
        addNewStudent.setLayout(new java.awt.GridLayout(1, 2));

        studDetails.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        studDetails.setPreferredSize(new java.awt.Dimension(800, 500));
        studDetails.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Student ID");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        studDetails.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("First Name");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        studDetails.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Last Name");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        studDetails.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Address");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        studDetails.add(jLabel5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Contact No.");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        studDetails.add(jLabel6, gridBagConstraints);

        studIdInp.setColumns(12);
        studIdInp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        studIdInp.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        studDetails.add(studIdInp, gridBagConstraints);

        fnameInp.setColumns(12);
        fnameInp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fnameInp.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        studDetails.add(fnameInp, gridBagConstraints);

        lnameInp.setColumns(12);
        lnameInp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lnameInp.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        studDetails.add(lnameInp, gridBagConstraints);

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBar(null);

        addressInp.setColumns(12);
        addressInp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addressInp.setLineWrap(true);
        addressInp.setRows(4);
        addressInp.setWrapStyleWord(true);
        addressInp.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3)));
        jScrollPane1.setViewportView(addressInp);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        studDetails.add(jScrollPane1, gridBagConstraints);

        mobileInp.setColumns(12);
        mobileInp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mobileInp.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        studDetails.add(mobileInp, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel13.setText("Add Student Details");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 50, 0);
        studDetails.add(jLabel13, gridBagConstraints);

        addNewStudent.add(studDetails);

        studFeeDetails.setBackground(new java.awt.Color(204, 204, 204));
        studFeeDetails.setBorder(studDetails.getBorder());
        studFeeDetails.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        studFeeDetails.setLayout(new java.awt.GridBagLayout());

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setText("Fee Details");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 50, 0);
        studFeeDetails.add(jLabel7, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        studFeeDetails.add(jLabel8, gridBagConstraints);

        dateInp.setText("2001-01-19");
        dateInp.setBorder(studIdInp.getBorder());
        dateInp.setColumns(studIdInp.getColumns());
        dateInp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));
        dateInp.setText("yyyy-MM-dd");
        dateInp.setToolTipText("yyyy-MM-dd");
        dateInp.setEnabled(false);
        dateInp.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(4, 14, 4, 0);
        studFeeDetails.add(dateInp, gridBagConstraints);

        jLabel9.setFont(jLabel2.getFont());
        jLabel9.setText("Subjects Opted:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        studFeeDetails.add(jLabel9, gridBagConstraints);

        dsCB.setBackground(studFeeDetails.getBackground());
        dsCB.setFont(studIdInp.getFont());
        dsCB.setText("DS");
        dsCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dsCBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        studFeeDetails.add(dsCB, gridBagConstraints);
        checkBoxList.add(dsCB);

        aaCB.setBackground(studFeeDetails.getBackground());
        aaCB.setFont(studIdInp.getFont());
        aaCB.setText("AoA");
        aaCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aaCBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        studFeeDetails.add(aaCB, gridBagConstraints);
        checkBoxList.add(aaCB);

        javaCB.setBackground(studFeeDetails.getBackground());
        javaCB.setFont(studIdInp.getFont());
        javaCB.setText("Java");
        javaCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                javaCBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        studFeeDetails.add(javaCB, gridBagConstraints);
        checkBoxList.add(javaCB);

        dmsCB.setBackground(studFeeDetails.getBackground());
        dmsCB.setFont(studIdInp.getFont());
        dmsCB.setText("DMS");
        dmsCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dmsCBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        studFeeDetails.add(dmsCB, gridBagConstraints);
        checkBoxList.add(dmsCB);

        itcCB.setBackground(studFeeDetails.getBackground());
        itcCB.setFont(studIdInp.getFont());
        itcCB.setText("ITC");
        itcCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itcCBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        studFeeDetails.add(itcCB, gridBagConstraints);
        checkBoxList.add(itcCB);

        jLabel10.setFont(jLabel2.getFont());
        jLabel10.setText("Total Fees");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        studFeeDetails.add(jLabel10, gridBagConstraints);

        calculatedFees.setColumns(studIdInp.getColumns());
        calculatedFees.setFont(studIdInp.getFont());
        calculatedFees.setBorder(studIdInp.getBorder());
        calculatedFees.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        studFeeDetails.add(calculatedFees, gridBagConstraints);

        jLabel11.setFont(jLabel2.getFont());
        jLabel11.setText("Current Payment");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        studFeeDetails.add(jLabel11, gridBagConstraints);

        currFesInp.setColumns(studIdInp.getColumns());
        currFesInp.setFont(studIdInp.getFont());
        currFesInp.setBorder(studIdInp.getBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        studFeeDetails.add(currFesInp, gridBagConstraints);

        jLabel12.setFont(jLabel2.getFont());
        jLabel12.setText("Payment Method");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        studFeeDetails.add(jLabel12, gridBagConstraints);

        paymentMethod.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        paymentMethod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "UPI", "Net Banking", "Credit Card", "Debit Card" }));
        paymentMethod.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                paymentMethodItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        studFeeDetails.add(paymentMethod, gridBagConstraints);

        addNewStudBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addNewStudBtn.setText("Submit");
        addNewStudBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        addNewStudBtn.setBorderPainted(false);
        addNewStudBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addNewStudBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewStudBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        studFeeDetails.add(addNewStudBtn, gridBagConstraints);

        referLabel.setFont(jLabel12.getFont());
        referLabel.setText("Transaction Reference ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        studFeeDetails.add(referLabel, gridBagConstraints);

        referanceIdInp.setEditable(false);
        referanceIdInp.setColumns(calculatedFees.getColumns());
        referanceIdInp.setFont(calculatedFees.getFont());
        referanceIdInp.setBorder(calculatedFees.getBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        studFeeDetails.add(referanceIdInp, gridBagConstraints);
        referanceIdInp.setText(randomStringGenerator());

        addNewStudent.add(studFeeDetails);

        mainPanel.add(addNewStudent, "addNewStudent");

        searchStudent.setLayout(new java.awt.GridBagLayout());

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel14.setText("Existing Student Information");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        searchStudent.add(jLabel14, gridBagConstraints);

        jLabel15.setFont(jLabel10.getFont());
        jLabel15.setText("Student ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        searchStudent.add(jLabel15, gridBagConstraints);

        jLabel16.setFont(jLabel10.getFont());
        jLabel16.setText("Contact Number");
        jLabel16.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        searchStudent.add(jLabel16, gridBagConstraints);

        jTextField5.setColumns(studIdInp.getColumns());
        jTextField5.setFont(jLabel10.getFont());
        jTextField5.setBorder(calculatedFees.getBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        searchStudent.add(jTextField5, gridBagConstraints);

        jTextField6.setColumns(12);
        jTextField6.setFont(jLabel10.getFont());
        jTextField6.setBorder(calculatedFees.getBorder());
        jTextField6.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        searchStudent.add(jTextField6, gridBagConstraints);

        jScrollPane3.setPreferredSize(new java.awt.Dimension(452, 100));

        jTable2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Class", "ID", "Class"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setPreferredSize(new java.awt.Dimension(300, 100));
        jTable2.setShowGrid(false);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        searchStudent.add(jScrollPane3, gridBagConstraints);

        jButton2.setFont(addNewStudBtn.getFont());
        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(30, 0, 0, 0);
        searchStudent.add(jButton2, gridBagConstraints);

        mainPanel.add(searchStudent, "searchStudent");

        payFeesPanel.setFont(payFeesPanel.getFont().deriveFont(payFeesPanel.getFont().getSize()+4f));
        payFeesPanel.setLayout(new java.awt.GridBagLayout());

        jLabel17.setFont(jLabel11.getFont());
        jLabel17.setText("Student ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        payFeesPanel.add(jLabel17, gridBagConstraints);

        jLabel18.setFont(jLabel11.getFont());
        jLabel18.setText("Contact Number");
        jLabel18.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        payFeesPanel.add(jLabel18, gridBagConstraints);

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel19.setText("OR");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        payFeesPanel.add(jLabel19, gridBagConstraints);

        studentIDInp.setColumns(jTextField5.getColumns());
        studentIDInp.setFont(jLabel11.getFont());
        studentIDInp.setBorder(calculatedFees.getBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        payFeesPanel.add(studentIDInp, gridBagConstraints);

        studContactInp.setEditable(false);
        studContactInp.setColumns(jTextField5.getColumns());
        studContactInp.setFont(jLabel11.getFont());
        studContactInp.setBorder(calculatedFees.getBorder());
        studContactInp.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        payFeesPanel.add(studContactInp, gridBagConstraints);

        jButton3.setFont(jLabel11.getFont());
        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        payFeesPanel.add(jButton3, gridBagConstraints);

        jLabel20.setFont(jLabel11.getFont());
        jLabel20.setText("Pending Dues");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        payFeesPanel.add(jLabel20, gridBagConstraints);

        currentDbBal.setEditable(false);
        currentDbBal.setColumns(jTextField5.getColumns());
        currentDbBal.setFont(jLabel11.getFont());
        currentDbBal.setBorder(calculatedFees.getBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        payFeesPanel.add(currentDbBal, gridBagConstraints);

        jLabel21.setFont(jLabel11.getFont());
        jLabel21.setText("New Payment");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        payFeesPanel.add(jLabel21, gridBagConstraints);

        currPaymentInp.setEditable(false);
        currPaymentInp.setColumns(jTextField5.getColumns());
        currPaymentInp.setFont(jLabel11.getFont());
        currPaymentInp.setBorder(calculatedFees.getBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        payFeesPanel.add(currPaymentInp, gridBagConstraints);

        jLabel22.setFont(jLabel11.getFont());
        jLabel22.setText("Updated Balance");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        payFeesPanel.add(jLabel22, gridBagConstraints);

        jButton4.setFont(jLabel11.getFont());
        jButton4.setText("Pay");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        payFeesPanel.add(jButton4, gridBagConstraints);

        updatedDbBal.setEditable(false);
        updatedDbBal.setColumns(jTextField5.getColumns());
        updatedDbBal.setFont(jLabel11.getFont());
        updatedDbBal.setBorder(calculatedFees.getBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 8, 0);
        payFeesPanel.add(updatedDbBal, gridBagConstraints);

        mainPanel.add(payFeesPanel, "payFeesPanel");

        checkStudDuesPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel23.setText("Students with pending dues.");
        jLabel23.setPreferredSize(new java.awt.Dimension(50, 40));
        checkStudDuesPanel.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 270, 40));

        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton5.setText("Find All");
        jButton5.setBorder(calculatedFees.getBorder());
        jButton5.setPreferredSize(new java.awt.Dimension(50, 40));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        checkStudDuesPanel.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 30, 100, -1));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Mobile Number", "Last Payment", "Balance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        checkStudDuesPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 710, 350));

        mainPanel.add(checkStudDuesPanel, "checkStudDuesPanel");

        jMenuBar1.setFont(jMenuBar1.getFont().deriveFont(jMenuBar1.getFont().getSize()+1f));

        backBtn.setText("Home");
        backBtn.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        backBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backBtnMouseClicked(evt);
            }
        });
        jMenuBar1.add(backBtn);

        studInfo.setText("Student");
        studInfo.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        addStud.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        addStud.setText("Add");
        addStud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudActionPerformed(evt);
            }
        });
        studInfo.add(addStud);

        searchStud.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        searchStud.setText("Search");
        searchStud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchStudActionPerformed(evt);
            }
        });
        studInfo.add(searchStud);

        jMenuBar1.add(studInfo);

        payFees.setText("Fees");
        payFees.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        payStudFees.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        payStudFees.setText("Pay Fees");
        payStudFees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payStudFeesActionPerformed(evt);
            }
        });
        payFees.add(payStudFees);

        checkStudDues.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        checkStudDues.setText("Check Dues");
        checkStudDues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkStudDuesActionPerformed(evt);
            }
        });
        payFees.add(checkStudDues);

        jMenuBar1.add(payFees);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void changeCardView(String panelName) {
        CardLayout c1 = (CardLayout) mainPanel.getLayout();
//        String panelName ="addNewStudent";       
        c1.show(mainPanel, panelName);
    }

    private void addStudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudActionPerformed
        changeCardView("addNewStudent");
    }//GEN-LAST:event_addStudActionPerformed

    private void backBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseClicked
        changeCardView("feesHome");
    }//GEN-LAST:event_backBtnMouseClicked

    private void searchStudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchStudActionPerformed
        changeCardView("searchStudent");
    }//GEN-LAST:event_searchStudActionPerformed

    private void payStudFeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payStudFeesActionPerformed
        changeCardView("payFeesPanel");
    }//GEN-LAST:event_payStudFeesActionPerformed

    private void checkStudDuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStudDuesActionPerformed
        changeCardView("checkStudDuesPanel");
    }//GEN-LAST:event_checkStudDuesActionPerformed

    private void updateCalculatedFeesValue(JCheckBox subOpt, int fees) {
        if (subOpt.isSelected()) {
            totalCalculatedFees += fees;
        } else {
            totalCalculatedFees -= fees;
        }
        calculatedFees.setText(totalCalculatedFees.toString());
    }

    private void dsCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dsCBActionPerformed
        updateCalculatedFeesValue(dsCB, 5000);
    }//GEN-LAST:event_dsCBActionPerformed

    private void aaCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aaCBActionPerformed
        updateCalculatedFeesValue(aaCB, 2000);
    }//GEN-LAST:event_aaCBActionPerformed

    private void javaCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_javaCBActionPerformed
        updateCalculatedFeesValue(javaCB, 6000);
    }//GEN-LAST:event_javaCBActionPerformed

    private void dmsCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dmsCBActionPerformed
        updateCalculatedFeesValue(dmsCB, 4500);
    }//GEN-LAST:event_dmsCBActionPerformed

    private void itcCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itcCBActionPerformed
        updateCalculatedFeesValue(itcCB, 5500);
    }//GEN-LAST:event_itcCBActionPerformed

    private void paymentMethodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_paymentMethodItemStateChanged
        if (paymentMethod.getSelectedIndex() != 0) {
            referLabel.setVisible(true);
            referanceIdInp.setVisible(true);
        } else {
            referLabel.setVisible(false);
            referanceIdInp.setVisible(false);
        }
    }//GEN-LAST:event_paymentMethodItemStateChanged

    private void addNewStudBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewStudBtnActionPerformed
        PreparedStatement ps;
        int recordAdded;
        try {
            try (Connection con = getDBConnection()) {
//                -----------------Inserting basic details-----------------
//                Getting data from text fields
                String fname = fnameInp.getText();
                String lname = lnameInp.getText();
                String address = addressInp.getText();
                int studID = Integer.parseInt(studIdInp.getText());
                BigInteger contactNum;
                contactNum = new BigInteger(mobileInp.getText());
//                Preparing database statment for student basic info table
                ps = con.prepareStatement("insert into \"studentBasicInfo\" values (?,?,?,?,?)");
                ps.setInt(1, studID);
                ps.setString(2, fname);
                ps.setString(3, lname);
                ps.setString(4, address);
                ps.setObject(5, contactNum);
//              Executing query
                recordAdded = ps.executeUpdate();
                System.out.println(recordAdded + " student record added.");
//              ---------------Inserting fee details--------------------
//              fetching info for fee details
                String date = dateInp.getText();
                double Localtotalfees = Double.parseDouble(calculatedFees.getText());
                double currPayment = Double.parseDouble(currFesInp.getText());
                double balanceFees = Localtotalfees - currPayment;
                String paymentMethodSelected = (String) paymentMethod.getSelectedItem();
                String referanceID = referanceIdInp.getText();
//                preparing db query
                ps = con.prepareStatement("insert into \"studFeesInfo\" values (?,?,?,?,?,?,?);");
                ps.setDouble(1, Localtotalfees);
                ps.setDouble(2, currPayment);
                ps.setDouble(3, balanceFees);
                ps.setString(4, referanceID);
                ps.setTimestamp(5,new Timestamp(new Date().getTime()));
                ps.setString(6, paymentMethodSelected);
                ps.setInt(7, studID);
//               executing query
                recordAdded = ps.executeUpdate();
                System.out.println(recordAdded + " student fees info added.");
//                prepare db query for languages
                ps = con.prepareStatement("insert into \"studentSubjects\"  values (?,?,?,?,?,?);");
                ps.setInt(1, studID);
                int subIndex = 2;
                for (JCheckBox jb : checkBoxList) {
                    boolean subject;
                    subject = jb.isSelected();
                    ps.setBoolean(subIndex, subject);
                    subIndex++;
                }
                recordAdded = ps.executeUpdate();
                System.out.println(recordAdded + " subject record added.");
                con.close();
                ps.close();
                JOptionPane.showMessageDialog(this, recordAdded + " student record(s) added.");
            }
        } catch (ClassNotFoundException | NumberFormatException | SQLException ex) {
//            JOptionPane
            JOptionPane.showMessageDialog(this, "Some error occured. Please try again");
            Logger.getLogger(feeManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addNewStudBtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            int studID = Integer.parseInt(jTextField5.getText());
            BigInteger mobile;
            if (jTextField6.getText() == null || "".equals(jTextField6.getText())) {
                mobile = new BigInteger("0");
            } else {
                mobile = new BigInteger(jTextField6.getText());
            }

            PreparedStatement ps;
            try (Connection con = getDBConnection()) {
                ps = con.prepareStatement("select rr.\"Student_ID\", rr.\"First Name\", Daa.\"totalFees\", Daa.balance from \"studentBasicInfo\"  rr\n"
                        + "left join \"studFeesInfo\" Daa on rr.\"Student_ID\" = Daa.\"student_ID\" where rr.\"Contact\"=? or rr.\"Student_ID\"=?;");
                ps.setObject(1, mobile);
                ps.setInt(2, studID);
                ResultSet rs = ps.executeQuery();
                System.out.println("dbutils");
                jTable2.setModel(DbUtils.resultSetToTableModel(rs));
            }
            ps.close();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(feeManager.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            BigInteger mobile;
            int studID;
            if (studentIDInp.getText() == null || "".equals(studentIDInp.getText())) {
                studID = 0;
            } else {
                studID = Integer.parseInt(studentIDInp.getText());
            }
            if (studContactInp.getText() == null || "".equals(studContactInp.getText())) {
                mobile = new BigInteger("0");
            } else {
                mobile = new BigInteger(studContactInp.getText());
            }
            PreparedStatement ps;
            ResultSet rs;
            try (Connection con = getDBConnection()) {
                ps = con.prepareStatement("select balance, cc.\"totalFees\" from \"studFeesInfo\" cc left join \"studentBasicInfo\" aa on (aa.\"Student_ID\"=cc.\"student_ID\" )\n"
                        + "where aa.\"Student_ID\"=? or aa.\"Contact\" =? order by transaction_date desc;");
                ps.setInt(1, studID);
                ps.setObject(2, mobile);
                rs = ps.executeQuery();
                if (rs.next()) {
                    this.totalFees = rs.getDouble("totalFees");
                    this.currBalance = rs.getDouble("balance");
                    String balanceAmount = Double.toString(this.currBalance);
                    currentDbBal.setText(balanceAmount);
                    currPaymentInp.setEditable(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Student ID is invalid. Please reenter.");
                    studentIDInp.setText("");
                }
                con.close();
                ps.close();
                rs.close();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(feeManager.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (SQLException | java.lang.NumberFormatException ex) {
            Logger.getLogger(feeManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            int studID;
            if (studentIDInp.getText() == null || "".equals(studentIDInp.getText())) {
                studID = 0;
            } else {
                studID = Integer.parseInt(studentIDInp.getText());
            }
            Double currPayment = Double.parseDouble(currPaymentInp.getText());
            this.currBalance = Double.parseDouble(currentDbBal.getText());
            PreparedStatement ps;
            ResultSet rs;
            try (Connection con = getDBConnection()) {
                ps = con.prepareStatement("INSERT into \"studFeesInfo\" (\"student_ID\",balance,transaction_date,\"currentPayment\",\"totalFees\") VALUES \n"
                        + "(?,?,cast(? as date),?,?);");
                ps.setInt(1, studID);
                ps.setDouble(2, (this.currBalance - currPayment));
                SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd");
                Date today = new Date();
                String todayDate = sd.format(today);
                ps.setString(3, todayDate);
                ps.setDouble(4, currPayment);
                ps.setDouble(5, totalFees);
                int records = ps.executeUpdate();
                JOptionPane.showMessageDialog(this, records + " record(s) updated.");
                con.close();
                updatedDbBal.setText(Double.toString(this.currBalance - currPayment));
            }
            ps.close();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(feeManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            PreparedStatement ps;
            ResultSet rs;
            try ( // TODO add your handling code here:
                    Connection con = getDBConnection()) {
                ps = con.prepareStatement("select * from (\n" +
"select                            \n" +
"\"student_ID\" as \"Student ID\",\n" +
"\"totalFees\" as \"Total Fees\",\n" +
"\"currentPayment\" as \"Last Payment\",\n" +
"balance as \"Dues\",\n" +
"transaction_date as \"Last Transaction Date\",\n" +
"row_number() over(partition by  \"student_ID\" order by transaction_date  desc) as rn\n" +
"                            from \"studFeesInfo\") t where t.rn = 1 and t.\"Dues\" > 0 order by \"Last Transaction Date\" desc, \"Student ID\" asc;");
                rs = ps.executeQuery();

                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                ps.close();
                rs.close();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(feeManager.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (SQLException ex) {
            Logger.getLogger(feeManager.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private Connection getDBConnection() throws ClassNotFoundException, SQLException {
//        update as required
        String usrname = "postgres";
        String password = "3036";
        Class.forName("org.postgresql.Driver");
        return (Connection) DriverManager.getConnection("jdbc:postgresql://localhost:5432/Java Mini Project", usrname, password);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(feeManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(feeManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(feeManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(feeManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new feeManager().setVisible(true);
        });
    }
    
     public String randomStringGenerator() {
    int leftLimit = 97; // letter 'a'
    int rightLimit = 122; // letter 'z'
    int targetStringLength = 10;
    Random random = new Random();
    StringBuilder buffer = new StringBuilder(targetStringLength);
    for (int i = 0; i < targetStringLength; i++) {
        int randomLimitedInt = leftLimit + (int) 
          (random.nextFloat() * (rightLimit - leftLimit + 1));
//          System.out.println(randomLimitedInt);
        buffer.append((char) randomLimitedInt);
    }
    return buffer.toString();    
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox aaCB;
    private javax.swing.JButton addNewStudBtn;
    private javax.swing.JMenuItem addStud;
    private javax.swing.JTextArea addressInp;
    private javax.swing.JMenu backBtn;
    private javax.swing.JTextField calculatedFees;
    private javax.swing.JMenuItem checkStudDues;
    private javax.swing.JPanel checkStudDuesPanel;
    private javax.swing.JTextField currFesInp;
    private javax.swing.JTextField currPaymentInp;
    private javax.swing.JTextField currentDbBal;
    private javax.swing.JFormattedTextField dateInp;
    private javax.swing.JCheckBox dmsCB;
    private javax.swing.JCheckBox dsCB;
    private javax.swing.JPanel feesHome;
    private javax.swing.JTextField fnameInp;
    private javax.swing.JCheckBox itcCB;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JCheckBox javaCB;
    private javax.swing.JTextField lnameInp;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField mobileInp;
    private javax.swing.JMenu payFees;
    private javax.swing.JPanel payFeesPanel;
    private javax.swing.JMenuItem payStudFees;
    private javax.swing.JComboBox<String> paymentMethod;
    private javax.swing.JLabel referLabel;
    private javax.swing.JTextField referanceIdInp;
    private javax.swing.JMenuItem searchStud;
    private javax.swing.JPanel searchStudent;
    private javax.swing.JTextField studContactInp;
    private javax.swing.JPanel studFeeDetails;
    private javax.swing.JTextField studIdInp;
    private javax.swing.JMenu studInfo;
    private javax.swing.JTextField studentIDInp;
    private javax.swing.JTextField updatedDbBal;
    // End of variables declaration//GEN-END:variables
    Integer totalCalculatedFees = 0;
    ArrayList<JCheckBox> checkBoxList = new ArrayList<>();
    private Double currBalance, totalFees;
}
